[
****************************************************************************************
*****  Copyright 2022 CUTEK. All rights reserved.                     rev 01-2022  *****
*****                                                                              *****
*****  This licensed source code may not be reproduced, displayed, modified or     *****
*****  distributed without the express prior written permission of the copyright   *****
*****  holder. As implemented with CUTEK products, code is licensed only for the   *****
*****  license term of the agreement. For further information, contact             *****
*****  sales@cutek.com                                                             *****
****************************************************************************************

 Client name:  Austin Telco FCU
 File name:    MFMORTGAGE.TRACK.FIX
 Created by:   CUTEK, Inc. - Marc Middleton
 Created on:   MAY 2023
 CUTEK Ticket: 33240
 
 Description:
 Hello,
 We currently have a process where we import a .CSV file from CU Member’s Mortgage. 
 We transfer that file into letterfiles (CB01709.csv). 
 Then we run the PowerOn CUMORTGAGE.TRACK.FIX and then run the batch job CU.MORTGAGE.TRACK.FM
 
 We need something similar created using Member’s First Mortgage’s import file. 
 I’ve already transferred it over to the letterfiles, it is named FICSINQDATA.FIL.
 We will also need to create a new warning code. 
 The other process places warning 59 on the account. 
 Please let me know if you need more details. 
 Thanks,
 Avery Sneed
 
 Modified by:  
 Modified on:  
 Modification: 
]
TARGET=ACCOUNT

DEFINE
 #INCLUDE "RD.OUTPUT.DEF"
 OUTPUTCHANNEL1=NUMBER
 OUTPUTCHANNEL2=NUMBER
 OUTPUTCHANNEL3=NUMBER
 ERRORTEXT=CHARACTER
 FNUMBER=NUMBER
 FERROR=CHARACTER
 FLINE=CHARACTER
 TMP=CHARACTER
 TLOC=NUMBER
 INMONEY=MONEY             ARRAY(9999,4)
 INCHAR=CHARACTER(40)      ARRAY(9999,9)
 INDATE=DATE               ARRAY(9999,2)
 INNUMBER=NUMBER           ARRAY(9999)
 INRATE=RATE               ARRAY(9999,2)
 INCNT=NUMBER
 I=NUMBER
 J=NUMBER
 MDESC=CHARACTER
 FOUNDACCT=CHARACTER(1)
 FOUNDSSN=CHARACTER(1)
 EREASON=CHARACTER(35)    ARRAY(7)
 FIRST=CHARACTER(1)
 STMTCODE=NUMBER
 QTYSTMTCODE=NUMBER
 BCNT=NUMBER              ARRAY(7)
 BC=NUMBER               
 TBCNT=NUMBER
 BMORTGAGE=MONEY          ARRAY(7)
 TBMORTGAGE=MONEY
 RPTDATE=DATE
 GOODACCT=CHARACTER(1)
 FOUNDREGE=CHARACTER(1)
 DCNT=NUMBER
 Q=CHARACTER
 LF=CHARACTER
 CR=CHARACTER
 LEN=NUMBER
 CUACCTS=CHARACTER(20)   ARRAY(9999,2)
 CU=NUMBER
 MISSINGACCTS=NUMBER     ARRAY(5000)
 M=NUMBER
 K=NUMBER
 PD=NUMBER
 CNTS=CHARACTER
 TOTBAL=MONEY  
 PP=NUMBER
 TMPP=CHARACTER
END

SETUP
 Q=CTRLCHR(34)
 LF=CTRLCHR(10)
 CR=CTRLCHR(13)
 WHILELIMIT=2147483646
 RPTDATE=DATEREAD("CU Members Report Date") [USUALLY THE 22 OF EACH MONTH]
 IF RPTDATE='--/--/--' THEN RPTDATE=SYSTEMDATE
 MDESC="Mortgage as of "+FORMAT("99/99/99",RPTDATE)
 EREASON(1)="No Symitar Account Number"
 EREASON(2)="Symitar Account Closed"
 EREASON(3)="Low Share 00 Balance"
 EREASON(4)="SSN Not on Symitar Account"
 EREASON(5)="Symitar Account Not Found"
 EREASON(6)="Mortgage Recently Closed"
 EREASON(7)="0 Bal Tracking Already Expired"
 IF MONTH(SYSTEMDATE)=3 OR MONTH(SYSTEMDATE)=6 OR MONTH(SYSTEMDATE)=9 OR MONTH(SYSTEMDATE)=12 THEN 
  QTYSTMTCODE=3
 ELSE 
  QTYSTMTCODE=61
 PRINT "END OF SETUP"
 NEWLINE
END

SELECT
  NONE
END

PRINT TITLE="Member's First Tracking Update"
 NONANSISTANDARD
 HEADER=""
 WHILELIMIT=2147483646
 CALL GETINPUT 
 CALL GETACCOUNTS

 FIRST="Y"
 IF M>0 THEN [WILL PRINT RECORDS WITH NO SYMITAR ACCOUNT AND SKIP REST]
  DO
   OUTPUTOPEN(OUTPUTDEVREPORT,0,"STOP AND FIX Missing Accounts","",OUTPUTCHANNEL2,ERRORTEXT)
   IF ERRORTEXT<>"" THEN PRINT "Error: "+ERRORTEXT
   OUTPUTSWITCH(OUTPUTCHANNEL2,ERRORTEXT)
   FOR K=1 TO M
    DO
     J=MISSINGACCTS(K)
     CALL PRINTALL
    END
  END 
 ELSE [HAS ALL SYMIRAR ACCS - CREATES REPORT AND UPDATE INFO FOR PROCESSING]
  DO
   OUTPUTOPEN(OUTPUTDEVREPORT,0,"CU Members Update Exceptions","",OUTPUTCHANNEL1,ERRORTEXT)
   IF ERRORTEXT<>"" THEN PRINT "Error: "+ERRORTEXT
   OUTPUTOPEN(OUTPUTDEVREPORT,0,"CU Members Accounts","",OUTPUTCHANNEL3,ERRORTEXT)
   IF ERRORTEXT<>"" THEN PRINT "Error: "+ERRORTEXT
   PRINT "HERE "
   NEWLINE
   FOR J=1 TO INCNT
    DO
     IF INCHAR(J,7)="1827" THEN
      DO
       OUTPUTSWITCH(OUTPUTCHANNEL3,ERRORTEXT)                 [PRINTS RECORD TO REPORT]
       CALL PRINTALL
       OUTPUTSWITCH(OUTPUTCHANNEL1,ERRORTEXT)                 [PRINTS CHANGES TO UPDATE REPORT FOR PROCESSING]
       FOUNDACCT="N"
       FOUNDSSN="N"
       TLOC=-1
       IF VALUE(INCHAR(J,1))=0 OR VALUE(INCHAR(J,1))=9999999999 THEN   [NO SYMITAR ACCOUNT OR MISSING]
        DO
         BC=1
         CALL PRINTEXCEPTION
        END
       ELSE
        DO
         STMTCODE=QTYSTMTCODE
         INCHAR(J,1)=FORMAT("9999999999",VALUE(INCHAR(J,1)))
         FOR ACCOUNT INCHAR(J,1)
          DO
           FOUNDACCT="Y"
           IF ACCOUNT:CLOSEDATE<>'--/--/--' THEN
            DO
             BC=2
             CALL PRINTEXCEPTION                                        [SYMITAR ACCOUNT WAS CLOSED]
            END
           ELSE
            DO
             FOUNDREGE="N"
             CALL CHECKFORSSN
             IF FOUNDREGE="Y" AND STMTCODE=61 THEN                      [CHANGES STATEMENT MAIL CODE AS NEEDED]
              DO
               IF MONTH(SYSTEMDATE)=3 OR MONTH(SYSTEMDATE)=6 OR MONTH(SYSTEMDATE)=9 OR 
                  MONTH(SYSTEMDATE)=12 THEN STMTCODE=3
               ELSE STMTCODE=1
              END
             IF FOUNDSSN="Y" THEN
              DO
               IF GOODACCT="N" THEN                    [ADDS NOTE TO EXCEPTION REPORT IF ACCOUNT NOT IN GOOD STANDING]
                DO
                 BC=3
                 CALL PRINTEXCEPTION    
                END
               OUTPUTSWITCH(OUTPUTCHANNELDEFAULT,ERRORTEXT)
               FOR EACH TRACKING WITH TRACKING:TYPE=0 AND               [GET CURRENT MORTGAGE TRACKING LOC]
                   VALUE(TRACKING:USERCHAR1)=VALUE(INCHAR(J,2))
                DO
                 TLOC=TRACKING:LOCATOR
                 CALL MODIFYTRACKING
                END
               IF TLOC=-1 THEN                                          [NO TRACKING FOUND - ADD NEW]
                DO
                 IF INMONEY(J,1)>$0.00 THEN CALL CREATENEWTRACKING
                END
              END
             ELSE                                                       [SSN NOT ON SYMITAR ACCOUNT]
              DO
               BC=4
               CALL PRINTEXCEPTION
              END
            END
          END
         IF FOUNDACCT="N" THEN
          DO
           BC=5
           CALL PRINTEXCEPTION                                          [SYMITAR ACCOUNT IN LETTER FILE IS BAD]
          END
        END
      END
    END
  END 
END
   
TOTAL
 IF M>0 THEN OUTPUTSWITCH(OUTPUTCHANNELDEFAULT,ERRORTEXT)
 ELSE OUTPUTSWITCH(OUTPUTCHANNEL1,ERRORTEXT)
 NEWLINE
 NEWLINE
 NEWLINE
 FOR J=1 TO 7
  DO 
   IF BCNT(J)>0 THEN
    DO
     COL=1 EREASON(J)
     COL=45 BCNT(J)
     COL=93 BMORTGAGE(J)
     NEWLINE
    END
  END
 COL=1 REPEATCHR("-",93)
 NEWLINE
 COL=1 "Number of Mortgages needing review: "
 COL=45 TBCNT
 COL=93 TBMORTGAGE
 NEWLINE
 OUTPUTSWITCH(OUTPUTCHANNEL3,ERRORTEXT)
 COL=1 REPEATCHR("-",132)
 NEWLINE
 COL=131 TOTBAL
 NEWLINE
END

PROCEDURE GETINPUT
 FILEOPEN("LETTER","MFM.TEXT.csv","READ",FNUMBER,FERROR) 
 IF FERROR<>"" THEN
  DO
   PRINT "ERROR OPENING FILE: "+FERROR
   NEWLINE
  END
 WHILE FERROR=""
  DO
   FILEREAD(FNUMBER,1,FLINE,FERROR)
   TMP=TMP+FLINE
[FIXME:PRINT TMP NEWLINE]
   IF FLINE="|" OR FLINE=LF OR FLINE=CR THEN                                       [LOOK FOR COMMA DELIMITOR]
    DO
     TMP=SEGMENT(TMP,1,LENGTH(TMP)-1)                                              [REMOVE COMMA AT END]
     IF SEGMENT(TMP,1,1)=Q THEN TMP=SEGMENT(TMP,2,LENGTH(TMP))                     [REMOVE QUOTE]
     LEN=LENGTH(TMP)
     IF SEGMENT(TMP,LEN,LEN)=Q THEN TMP=SEGMENT(TMP,1,LEN-1)                       [REMOVE QUOTE]
     LEN=LENGTH(TMP)
     TMP=SEGMENT(TMP,1,LEN)                                                        [REMOVES ENDING SPACES]
     IF TMP="NULL" THEN TMP=""
     IF TMP="STARTRECORD" THEN                                                     [START OF EACH NEW RECORD]
      DO
       DCNT=1
       INCNT=INCNT+1
      END
     ELSE DCNT=DCNT+1
     IF DCNT=2 THEN 
      DO
       WHILE SEGMENT(TMP,1,1)=" " OR SEGMENT(TMP,1,1)="0" AND LENGTH(TMP)>0
        DO
         TMP=SEGMENT(TMP,2,LENGTH(TMP))
        END
       INCHAR(INCNT,2)=TMP                                                          [COLONIAL ACCT NUMBER]
      END
     IF DCNT=6 THEN INCHAR(INCNT,7)=TMP                                             [INVESTOR]
     IF DCNT=10 THEN                                                                [PRINCIPAL]
      DO
       PD=CHARACTERSEARCH(TMP,".")
       IF PD=0 THEN TMP=TMP+".00"                                                   [ADD CENTS IF NOT FOUND]
       ELSE
        DO
         CNTS=SEGMENT(TMP,PD+1,LENGTH(TMP))
         IF LENGTH(CNTS)=1 THEN TMP=TMP+"0"
        END
       INMONEY(INCNT,1)=MONEY(VALUE(TMP)) 
      END
     IF DCNT=11 THEN INNUMBER(INCNT)=VALUE(TMP)                                     [TERM] 
     IF DCNT=12 THEN                                                                [RATE]
      DO
       PP=CHARACTERSEARCH(TMP,".") 
       IF PP=0 THEN TMP=TMP+".000"
       ELSE
        DO
         TMPP=SEGMENT(TMP,PP+1,LENGTH(TMP))                                         [ADDED 3/31/19 - REQUIRE 3 DIGIT]
         IF LENGTH(TMPP)=1 THEN TMP=TMP+"00"
         ELSE IF LENGTH(TMPP)=2 THEN TMP=TMP+"0"
        END
       INRATE(INCNT,1)=RATE(VALUE(TMP))/100000
      END
     IF DCNT=16 THEN INDATE(INCNT,1)=DATEVALUE(TMP)                                 [ORIG DATE] 
     IF DCNT=18 THEN                                                                [ORIGINAL LOAN AMOUNT]
      DO
       PD=CHARACTERSEARCH(TMP,".")
       IF PD=0 THEN TMP=TMP+".00"                                                   [ADD CENTS IF NOT FOUND]
       ELSE
        DO
         CNTS=SEGMENT(TMP,PD+1,LENGTH(TMP))
         IF LENGTH(CNTS)=1 THEN TMP=TMP+"0"
        END
       INMONEY(INCNT,2)=MONEY(VALUE(TMP))
      END
     IF DCNT=29 THEN INCHAR(INCNT,8)=TMP                                            [FULL NAME]
     IF DCNT=30 THEN                                                                [SSN1]
      DO
       WHILE LENGTH(TMP)<9
        DO
         TMP="0"+TMP
        END
       INCHAR(INCNT,3)=TMP                                                      
      END
     IF DCNT=36 AND VALUE(TMP)>0 THEN                                               [SSN2]
      DO
       WHILE LENGTH(TMP)<9
        DO
         TMP="0"+TMP
        END
       INCHAR(INCNT,4)=TMP 
      END
     IF DCNT=37 THEN INCHAR(INCNT,5)=TMP                                            [FULL ADDRESS]
     IF DCNT=38 THEN INCHAR(INCNT,6)=TMP                                            [CITY]
     IF DCNT=40 THEN INCHAR(INCNT,6)=INCHAR(INCNT,6)+" "+TMP                        [ZIP]
     IF DCNT=48 THEN INDATE(INCNT,2)=DATEVALUE(TMP)                                 [DUE DATE]
     IF DCNT=51 THEN                                                                [TOTAL PAYMENT] 
      DO
       PD=CHARACTERSEARCH(TMP,".")
       IF PD=0 THEN TMP=TMP+".00"                                                   [ADD CENTS IF NOT FOUND]
       ELSE
        DO
         CNTS=SEGMENT(TMP,PD+1,LENGTH(TMP))
         IF LENGTH(CNTS)=1 THEN TMP=TMP+"0"
        END
       INMONEY(INCNT,3)=MONEY(VALUE(TMP))
      END
     IF DCNT=58 THEN                                                                [LATE FEE]
      DO
       PD=CHARACTERSEARCH(TMP,".")
       IF PD=0 THEN TMP=TMP+".00"                                                   [ADD CENTS IF NOT FOUND]
       ELSE
        DO
         CNTS=SEGMENT(TMP,PD+1,LENGTH(TMP))
         IF LENGTH(CNTS)=1 THEN TMP=TMP+"0"
        END
       INMONEY(INCNT,4)=MONEY(VALUE(TMP))
      END
     IF DCNT=64 THEN                                                                [LTV]
      DO
       IF CHARACTERSEARCH(TMP,".")=0 THEN TMP=TMP+".000"
       INRATE(INCNT,2)=RATE(VALUE(TMP))/100000
      END
     TMP=""
    END
   IF FERROR<>"" AND FERROR<>"EOF" THEN 
    DO
     PRINT "While loop error: "+FERROR
     NEWLINE
    END
  END
 FILECLOSE(FNUMBER,FERROR)
END

PROCEDURE CHECKFORSSN
 FOR EACH NAME WITH VALUE(NAME:SSN)>0 AND FOUNDSSN="N" AND 
                    NAME:EXPIRATIONDATE='--/--/--' AND NAME:TYPE<=1
  DO 
   IF NAME:SSN=SEGMENT(INCHAR(J,3),1,LENGTH(INCHAR(J,3))) OR 
      NAME:SSN=SEGMENT(INCHAR(J,4),1,LENGTH(INCHAR(J,4))) THEN FOUNDSSN="Y"
  END
 GOODACCT="N"
 FOR EACH SHARE WITH SHARE:CLOSEDATE='--/--/--' AND SHARE:CHARGEOFFDATE='--/--/--'
  DO
   IF SHARE:ID="00" THEN
    DO
     IF SHARE:BALANCE>=$25.00 THEN GOODACCT="Y"                                [ACCOUNT IN GOOD STANDING]
    END
   IF SHARE:STATEMENTGROUP=1 THEN STMTCODE=1
   FOR EACH SHARE NAME WITH VALUE(SHARE NAME:SSN)>0 AND FOUNDSSN="N" AND 
            SHARE NAME:EXPIRATIONDATE='--/--/--' AND SHARE NAME:TYPE<=1
    DO
     IF SHARE NAME:SSN=INCHAR(J,3) OR SHARE NAME:SSN=INCHAR(J,4) THEN FOUNDSSN="Y"
    END
   FOR EACH SHARE TRANSACTION WITH SHARE TRANSACTION:COMMENTCODE=0 AND
            SHARE TRANSACTION:POSTDATE>=DATEOFFSET(SYSTEMDATE,0,1) 
    DO
     IF SHARE TRANSACTION:REGECODE=1 THEN FOUNDREGE="Y"
    END
   UNTIL SHARE TRANSACTION:POSTDATE<DATEOFFSET(SYSTEMDATE,0,1) OR FOUNDREGE="Y"
  END
 FOR EACH LOAN WITH LOAN:CLOSEDATE='--/--/--' AND LOAN:CHARGEOFFDATE='--/--/--'
  DO
   IF LOAN:STATEMENTGROUP=1 THEN STMTCODE=1
   FOR EACH LOAN NAME WITH VALUE(LOAN NAME:SSN)>0 AND FOUNDSSN="N" AND 
                           LOAN NAME:EXPIRATIONDATE='--/--/--' AND LOAN NAME:TYPE<=1
    DO
     IF LOAN NAME:SSN=INCHAR(J,3) OR LOAN NAME:SSN=INCHAR(J,4) THEN FOUNDSSN="Y"
    END
   FOR EACH LOAN TRANSACTION WITH LOAN TRANSACTION:COMMENTCODE=0 AND
            LOAN TRANSACTION:POSTDATE>=DATEOFFSET(SYSTEMDATE,0,1) 
    DO
     IF LOAN TRANSACTION:REGECODE=1 THEN FOUNDREGE="Y"
    END
   UNTIL LOAN TRANSACTION:POSTDATE<DATEOFFSET(SYSTEMDATE,0,1) OR FOUNDREGE="Y"
  END
END

PROCEDURE MODIFYTRACKING
 IF INMONEY(J,1)=$0.00 THEN
  DO
   IF ANYWARNING(ACCOUNT,59) THEN
    DO
     PRINT "ACCOUNT "+INCHAR(J,1)+" MODIFY"
     NEWLINE
     PRINT " CHANGE CLEARWARNING 59 --/--/--"
     NEWLINE
    END
   IF TRACKING:EXPIREDATE='--/--/--' THEN
    DO
     PRINT "ACCOUNT "+INCHAR(J,1)+" MODIFY TRACKING LOC "
     PRINT TLOC
     NEWLINE
     PRINT " CHANGE USERCODE2 FROM "
     PRINT TRACKING:USERCODE2 
     PRINT " TO "
     PRINT STMTCODE
     NEWLINE
     PRINT " CHANGE USERAMOUNT1 FROM "
     PRINT TRACKING:USERAMOUNT1
     PRINT " TO "
     PRINT INMONEY(J,1)
     NEWLINE
     BC=6
     CALL PRINTEXCEPTION
    END
   ELSE
    DO
     BC=7
     CALL PRINTEXCEPTION
    END
  END
 ELSE
  DO
   PRINT "ACCOUNT "+INCHAR(J,1)+" MODIFY"
   NEWLINE
   IF NOT ANYWARNING(ACCOUNT,59) THEN
    DO
     PRINT " CHANGE SETWARNING 59 --/--/--"
     NEWLINE
    END
   PRINT " CHANGE CORRESPONDDATE FROM "
   PRINT ACCOUNT:CORRESPONDDATE
   PRINT " TO "
   PRINT RPTDATE
   NEWLINE
   PRINT "ACCOUNT "+INCHAR(J,1)+" MODIFY TRACKING LOC "
   PRINT TLOC
   NEWLINE
   IF TRACKING:USERCHAR1="" THEN            [COLONIAL LOAN NUMBER]         
    DO
     PRINT " CHANGE USERCHAR1 FROM "
     COL=49 TRACKING:USERCHAR1
     COL=89 "TO "
     COL=93 INCHAR(J,2)
     NEWLINE
    END
   IF INMONEY(J,1)>$0.00 AND                [HAS A BALANCE - UNEXPIRE THE TRACKING]
      TRACKING:EXPIREDATE<>'--/--/--' THEN
    DO
     PRINT " CHANGE EXPIREDATE FROM "
     PRINT TRACKING:EXPIREDATE
     PRINT " TO --/--/--"
     NEWLINE
    END
   IF TRACKING:USERCHAR2<>"1827" THEN       [INVESTOR]
    DO
     PRINT " CHANGE USERCHAR2 FROM "
     COL=49 TRACKING:USERCHAR2
     COL=89 "TO "
     COL=93 INCHAR(J,7)
     NEWLINE
    END
   PRINT " CHANGE USERCHAR3 FROM "          [AS OF DATE]
   COL=49 TRACKING:USERCHAR3
   COL=89 "TO "
   COL=93 MDESC
   NEWLINE
   IF TRACKING:USERCHAR5<>"1" AND INCHAR(J,9)="I" THEN [INVESTMENT LOAN]
    DO
     PRINT " CHANGE USERCHAR5 FROM "        [ADDRESS]
     COL=49 TRACKING:USERCHAR5
     COL=89 "TO "
     COL=93 "1"
     NEWLINE
    END
   IF TRACKING:USERCHAR6<>INCHAR(J,5) THEN 
    DO
     PRINT " CHANGE USERCHAR6 FROM "        [ADDRESS]
     COL=49 TRACKING:USERCHAR6
     COL=89 "TO "
     COL=93 INCHAR(J,5)
     NEWLINE
    END
   IF TRACKING:USERCHAR7<>INCHAR(J,6) THEN
    DO
     PRINT " CHANGE USERCHAR7 FROM "        [CITY ZIP]
     COL=49 TRACKING:USERCHAR7
     COL=89 "TO "
     COL=93 INCHAR(J,6)
     NEWLINE
    END
   PRINT " CHANGE USERCODE2 FROM "          [STATEMENT GROUP]
   PRINT TRACKING:USERCODE2 
   PRINT " TO "
   PRINT STMTCODE
   NEWLINE
   IF TRACKING:USERCODE4=0 THEN
    DO
     PRINT " CHANGE USERCODE4 FROM "        [ORIGINAL TERM]
     PRINT TRACKING:USERCODE4 
     PRINT " TO "
     PRINT INNUMBER(J)
     NEWLINE
    END
   PRINT " CHANGE USERAMOUNT1 FROM "        [BALANCE]
   PRINT TRACKING:USERAMOUNT1
   PRINT " TO "
   PRINT INMONEY(J,1)
   NEWLINE
   IF INMONEY(J,3)<>TRACKING:USERAMOUNT3 THEN
    DO
     PRINT " CHANGE USERAMOUNT3 FROM "      [PAYMENT]
     PRINT TRACKING:USERAMOUNT3
     PRINT " TO "
     PRINT INMONEY(J,3)
     NEWLINE
    END
   IF TRACKING:USERAMOUNT5<>INMONEY(J,4) THEN
    DO
     PRINT " CHANGE USERAMOUNT5 FROM "      [LATE FEE]
     PRINT TRACKING:USERAMOUNT5
     PRINT " TO "
     PRINT INMONEY(J,4)
     NEWLINE
    END
   IF TRACKING:USERAMOUNT8=$0.00 THEN
    DO
     PRINT " CHANGE USERAMOUNT8 FROM "      [ORIGINAL BALANCE]
     PRINT TRACKING:USERAMOUNT8
     PRINT " TO "
     PRINT INMONEY(J,2)
     NEWLINE
    END
   PRINT " CHANGE USERDATE2 FROM "          [DUE DATE]
   PRINT TRACKING:USERDATE2
   PRINT " TO "
   PRINT INDATE(J,2)
   NEWLINE
   PRINT " CHANGE USERDATE4 FROM "          [CURRENT DATE]
   PRINT TRACKING:USERDATE4
   PRINT " TO "
   PRINT SYSTEMDATE
   NEWLINE
   PRINT " CHANGE USERDATE5 FROM "          [NEXT STATEMENT DATE]
   PRINT TRACKING:USERDATE5
   PRINT " TO "
   PRINT DATEOFFSET(SYSTEMDATE,0,31)
   NEWLINE
   IF TRACKING:USERDATE6='--/--/--' THEN
    DO 
     PRINT " CHANGE USERDATE6 FROM "        [ORIGINAL LOAN DATE]
     PRINT TRACKING:USERDATE6
     PRINT " TO "
     PRINT INDATE(J,1)
     NEWLINE
    END
   IF TRACKING:USERRATE1=0.00% THEN
    DO
     PRINT " CHANGE USERRATE1 FROM "        [LOAN RATE]
     PRINT TRACKING:USERRATE1
     PRINT " TO "
     PRINT INRATE(J,1)
     NEWLINE
    END
   PRINT " CHANGE USERRATE2 FROM "          [LTV]
   PRINT TRACKING:USERRATE2
   PRINT " TO "
   PRINT INRATE(J,2)
   NEWLINE
  END
END

PROCEDURE CREATENEWTRACKING
 PRINT "ACCOUNT "+INCHAR(J,1)+" MODIFY"
 NEWLINE
 PRINT " CHANGE SETWARNING 59 --/--/--"
 NEWLINE
 PRINT " CHANGE CORRESPONDDATE FROM "
 PRINT ACCOUNT:CORRESPONDDATE
 PRINT " TO "
 PRINT RPTDATE
 NEWLINE
 PRINT "ACCOUNT "+INCHAR(J,1)+" CREATE TRACKING 0 "   
 NEWLINE
 PRINT " SET TYPE TO"
 COL=49 "0"
 NEWLINE
 PRINT " SET USERCHAR1 TO "            [COLONIAL LOAN NUMBER]
 COL=49 INCHAR(J,2)
 NEWLINE
 PRINT " SET USERCHAR2 TO "            [INVESTOR]
 COL=49 INCHAR(J,7)
 NEWLINE
 PRINT " SET USERCHAR3 TO "            [AS OF DATE]
 COL=49 MDESC
 NEWLINE
 PRINT " SET USERCHAR6 TO "            [ADDRESS]
 COL=49 INCHAR(J,5)
 NEWLINE
 PRINT " SET USERCHAR7 TO "            [CITY ZIP]
 COL=49 INCHAR(J,6)
 NEWLINE
 PRINT " SET USERCODE2 TO "            [STATEMENT GROUP]
 COL=49 STMTCODE
 NEWLINE
 PRINT " SET USERCODE4 TO "            [ORIGINAL TERM]
 COL=49 INNUMBER(J)
 NEWLINE
 PRINT " SET USERAMOUNT1 TO "          [BALANCE]
 COL=49 INMONEY(J,1)
 NEWLINE
 PRINT " SET USERAMOUNT3 TO "          [PAYMENT]
 COL=49 INMONEY(J,3)
 NEWLINE
 PRINT " SET USERAMOUNT5 TO "          [LATE FEE]
 COL=49 INMONEY(J,4)
 NEWLINE
 PRINT " SET USERAMOUNT8 TO "          [ORIGINAL BALANCE]
 COL=49 INMONEY(J,2)
 NEWLINE
 PRINT " SET USERDATE2 TO "            [DUE DATE]
 COL=49 INDATE(J,2)
 NEWLINE
 PRINT " SET USERDATE4 TO "            [CURRENT DATE]
 COL=49 SYSTEMDATE
 NEWLINE
 PRINT " SET USERDATE5 TO "            [NEXT STATEMENT DATE]
 COL=49 DATEOFFSET(SYSTEMDATE,0,31)
 NEWLINE
 PRINT " SET USERDATE6 TO "            [ORIGINAL LOAN DATE]
 COL=49 INDATE(J,1)
 NEWLINE
 PRINT " SET USERRATE1 TO "           [NOTE RATE]
 COL=49 INRATE(J,1)
 NEWLINE
 PRINT " SET USERRATE2 TO "            [INVESTOR]
 COL=49 INRATE(J,2)
 NEWLINE
END

PROCEDURE PRINTEXCEPTION
 IF INMONEY(J,1)>0 OR BC=6 THEN
  DO
   OUTPUTSWITCH(OUTPUTCHANNEL1,ERRORTEXT)
   IF FIRST="Y" THEN
    DO
     COL=1 "Colonial#"
     COL=11 "Symitar#"
     COL=22 "SSN 1"
     COL=32 "SSN 2"
     COL=42 "Address"
     COL=87 "Balance"
     COL=97 "Problem"
     NEWLINE
     COL=1 REPEATCHR("-",132)
     NEWLINE
     FIRST="N"
    END
   COL=01 SEGMENT(INCHAR(J,2),1,10)
   COL=11 SEGMENT(INCHAR(J,1),1,10)
   COL=22 SEGMENT(INCHAR(J,3),1,9)
   COL=32 SEGMENT(INCHAR(J,4),1,9)
   COL=42 INCHAR(J,5)
   COL=93 INMONEY(J,1)
   COL=97 EREASON(BC)
   NEWLINE
   BCNT(BC)=BCNT(BC)+1
   BMORTGAGE(BC)=BMORTGAGE(BC)+INMONEY(J,1)
   TBCNT=TBCNT+1
   TBMORTGAGE=TBMORTGAGE+INMONEY(J,1)
  END
END

PROCEDURE PRINTALL
 IF J=1 OR K=1 THEN
  DO
   COL=1 "SYM Acct"
   COL=13 "CU Acct"
   COL=25 "Name"
   COL=52 "SSN1"
   COL=63 "SSN2"
   COL=75 "Address"
   COL=105 "City,Zip"
   NEWLINE
   COL=1 REPEATCHR("-",132)
   NEWLINE
  END
 IF VALUE(INCHAR(J,2))>0 THEN
  DO
   IF M>0 THEN COL=1 "__________" 
   ELSE COL=1 INCHAR(J,1)
   COL=13 INCHAR(J,2)                          [COLONIAL ACCT NUMBER]
   COL=25 SEGMENT(INCHAR(J,8),1,25)            [NAME]
   COL=52 INCHAR(J,3)                          [SSN1]
   COL=63 INCHAR(J,4)                          [SSN2]
   COL=75 SEGMENT(INCHAR(J,5),1,29)            [ADDRESS]
   COL=105 SEGMENT(INCHAR(J,6),1,20)           [CITY, ZIP]
   COL=131 INMONEY(J,1)
   TOTBAL=TOTBAL+INMONEY(J,1)
   NEWLINE
  END
END

PROCEDURE GETACCOUNTS
 FILEOPEN("LETTER","CUACCOUNTS","READ",FNUMBER,FERROR) 
 WHILE FERROR=""
  DO
   FILEREADLINE(FNUMBER,FLINE,FERROR)
   CU=CU+1
   CUACCTS(CU,2)=SEGMENT(FLINE,1,10)
   CUACCTS(CU,1)=SEGMENT(FLINE,13,LENGTH(FLINE))
  END
 FILECLOSE(FNUMBER,FERROR) 
 WHILELIMIT=2147483646
 FOR I=1 TO INCNT
  DO
   J=1
   WHILE J<=CU AND VALUE(INCHAR(I,1))=0
    DO
     IF VALUE(INCHAR(I,2))=VALUE(CUACCTS(J,1)) THEN INCHAR(I,1)=CUACCTS(J,2)  [ADD SYMITAR ACCOUNT TO RECORD]
     J=J+1
    END
   IF VALUE(INCHAR(I,1))=0 AND VALUE(INCHAR(I,2))>0 THEN                [NOTE MISSING SYMITAR ACCOUNT NUMBER]
    DO
     M=M+1
     MISSINGACCTS(M)=I
    END
  END
END
   
